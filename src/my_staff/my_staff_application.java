
package my_staff;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
public class my_staff_application extends javax.swing.JFrame {

    /**
     * Creates new form my_staff_application
     */
Connection con=null;
PreparedStatement pst=null;
ResultSet rs=null;

     
    public my_staff_application() {
 
        con=dbc.connectdb();
        initComponents();
        
        this.setLocationRelativeTo(null);
        
       showTable();
       clears();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staff_table = new javax.swing.JTable();
        nic = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        add_button = new javax.swing.JButton();
        save_button = new javax.swing.JButton();
        search_Button = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        clear_button = new javax.swing.JButton();
        add_button1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        staff_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "FIRST NAME", "LAST NAME", "AGE"
            }
        ));
        staff_table.setSelectionBackground(new java.awt.Color(255, 204, 204));
        jScrollPane1.setViewportView(staff_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 630, 190));
        jPanel1.add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 241, -1));
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 295, 241, -1));

        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });
        jPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 337, 241, -1));
        jPanel1.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 389, 241, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("NIC");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 61, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("First Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 299, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Last Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 341, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Age");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 397, 61, -1));

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(add_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 107, -1));

        save_button.setText("Save");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(save_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 136, -1));

        search_Button.setText("Search");
        search_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_ButtonActionPerformed(evt);
            }
        });
        jPanel1.add(search_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 350, 80, 40));
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 440, 240, -1));

        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(clear_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 350, 85, 40));

        add_button1.setText("Delete");
        add_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_button1ActionPerformed(evt);
            }
        });
        jPanel1.add(add_button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 440, 107, -1));

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 3, 24)); // NOI18N
        jLabel5.setText("Staff Registry");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 140, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////ADD STAFFS STARTS
       
        String nic1 = JOptionPane.showInputDialog("Enter nic");
        nic.setText(nic1);
         
        String fname1 = JOptionPane.showInputDialog("Enter First Name");
        fname.setText(fname1);
        
        String lname1=JOptionPane.showInputDialog("Enter last Name");
        lname.setText(lname1);
        
        String age1= JOptionPane.showInputDialog("Enter Age");
        age.setText(age1);
        
        if(nic.getText().equals("")||fname.getText().equals("")||lname.getText().equals("")||age.getText().equals(""))
        { clears();
         JOptionPane.showMessageDialog(null,"Fields cannot be empty!");
        } else{   
      DefaultTableModel model = (DefaultTableModel)staff_table.getModel();
      Vector rowlist= new Vector <Object>(5);
  
    rowlist.add(nic.getText());
    rowlist.add(fname.getText());
    rowlist.add(lname.getText());
    rowlist.add(age.getText());
    model.addRow(rowlist);
        }
        
      /* ***************************************************************************************************
  DefaultTableModel model = (DefaultTableModel)staff_table.getModel();
  Vector rowlist= new Vector <Object>(5);
  rowlist.add(nic.getText());
  rowlist.add(fname.getText());
  rowlist.add(lname.getText());
  rowlist.add(age.getText());
  model.addRow(rowlist);
        
      ************************************************************************************************/
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////ADD STAFFS ENDS
    }//GEN-LAST:event_add_buttonActionPerformed

    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SAVE START
           
            try{
            String sqlOne = "INSERT INTO STAFF"
                    + "(NIC, FIRSTNAME, LASTNAME, AGE)"
                    + "VALUES (?, ?, ?, ?)";
            pst=con.prepareStatement(sqlOne);
            pst.setString(1,nic.getText());
            pst.setString(2, fname.getText());
            pst.setString(3, lname.getText());
            pst.setString(4, age.getText());
            pst.executeUpdate();
            showTable();
            clears();
         JOptionPane.showMessageDialog(null, "row(s) inserted successfully");

        }catch(HeadlessException | SQLException sql){
            JOptionPane.showMessageDialog(null, "Invalid Credentials!!"+sql);
        } 

    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// multirow save      
   
    /*try{
   DefaultTableModel model = (DefaultTableModel)staff_table.getModel();
   
  int rows=staff_table.getRowCount();
  for(int row = 0; row<rows; row++)
  {   
    String nic = (String)staff_table.getValueAt(row, 0);
    String fname = (String) staff_table.getValueAt(row, 1);
    String lastname = (String)staff_table.getValueAt(row, 2);
    String age=(String)staff_table.getValueAt(row,3);
    String sql = "Insert into staff(NIC,FIRSTNAME,LASTNAME,AGE) values ('"+nic+"','"+fname+"','"+lastname+"','"+age+"')";
    pst = con.prepareStatement(sql);
    pst.execute();     
  }
  JOptionPane.showMessageDialog(null, "Successfully Save");
}
catch(Exception e){
  JOptionPane.showMessageDialog(this,e.getMessage());
}      */
         
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SAVE ENDS

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////display data
    }                          
  public void showTable(){
        try{
        String sql="SELECT * FROM staff";
        pst=con.prepareStatement(sql);
        
        rs=pst.executeQuery();
        
        staff_table.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(HeadlessException | SQLException sqe){
            JOptionPane.showMessageDialog(null, "Invalid Credentials!!"+sqe); 
        }
  
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Binary search
     
    }
     
// Returns index of x if it is present in arr[], 
    // else return -1 */
   /* public static int binarySearch(String[] arr, String x) {
        int l = 0, r = arr.length - 1; 
        while (l <= r) { 
            int m = l + (r - l) / 2; 
  
            int res = x.compareTo(arr[m]); 
  
            // Check if x is present at mid 
            if (res == 0) 
                return m; 
  
            // If x greater, ignore left half 
            if (res > 0) 
                l = m + 1; 
  
            // If x is smaller, ignore right half 
            else
                r = m - 1; 
        } 
        return -1; 
    }*/
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// linear searching 
        public static int linearSearch(String[] array_staff,String key){
        int i;
        for(i=0;i<array_staff.length;i++){
            if(array_staff[i].equals(key)){
                return i;
            }
    
        }
         return -1;
    }
  
    public void clears(){
        nic.setText("");
        fname.setText("");
        lname.setText("");
        age.setText("");
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void showdata(){
        try{
            String sql= "select * from staff";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            staff_table.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
       Logger.getLogger(my_staff_application.class.getName()).log(Level.SEVERE, null, ex);
    
}
       
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////binary search
    }//GEN-LAST:event_save_buttonActionPerformed

    private void search_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_ButtonActionPerformed
       
        // TODO add your handling code here:
          showdata();
       DefaultTableModel model = (DefaultTableModel) staff_table.getModel();
       int NoRow = model.getRowCount();
        String StaffArray[] = new String[NoRow];
       for(int i = 0; i<NoRow; i++){
       StaffArray[i] = model.getValueAt(i, 1).toString();
        }
        
        String SearchKey = search.getText();
        int position = linearSearch(StaffArray, SearchKey);
        if(position ==  -1 ){
        JOptionPane.showMessageDialog(null, "Staff does not exist!");
         clears();
         search.setText("");
        }else{
            
           
            staff_table.clearSelection();
            staff_table.addRowSelectionInterval(position, position);
            nic.setText(model.getValueAt(position, 0).toString());
            fname.setText(model.getValueAt(position, 1).toString());
            lname.setText(model.getValueAt(position, 2).toString());
            age.setText(model.getValueAt(position, 3).toString());     
            JOptionPane.showMessageDialog(null, "Staff Found!");
            search.setText("");
            
        } 
    
  
          /*try {
        DefaultTableModel stb=(DefaultTableModel)staff_table.getModel();
        pst=con.prepareStatement("select * from staff");
        rs=pst.executeQuery();
        
        while(rs.next()){
        Object o[]={rs.getString("nic"),rs.getString("firstname"),rs.getString("lastname"),rs.getInt("age")};
        String arr [] = new String[o.length];
        for(int a=0;a<o.length;a++)
        arr[a]=String.valueOf(o[a]);
        //sort array, add arrau to another array
        String SearchKey = search.getText();
        int position = linearSearch(arr, SearchKey);
        if(position == -1){
        staff_table.clearSelection();
        staff_table.addRowSelectionInterval(position, position);
        nic.setText(stb.getValueAt(position, 1).toString());
        fname.setText(stb.getValueAt(position, 2).toString());
        lname.setText(stb.getValueAt(position, 3).toString());
        age.setText(stb.getValueAt(position, 4).toString());
        JOptionPane.showMessageDialog(null, "Result found");
        }
        else {
        JOptionPane.showMessageDialog(null,"staff not found"); }
                   
        }
       
        } catch (SQLException ex) {
        Logger.getLogger(my_staff_application.class.getName()).log(Level.SEVERE, null, ex);
    }*/
     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SEARCH ENDS
    }//GEN-LAST:event_search_ButtonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        // TODO add your handling code here:
         
           clears();
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void add_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_button1ActionPerformed
        // TODO add your handling code here:
        
        try{
            String sql ="DELETE FROM STAFF WHERE NIC=?";
            pst=con.prepareStatement(sql);
            pst.setString(1, nic.getText());
            pst.executeUpdate();
            showTable();
            clears();
            JOptionPane.showMessageDialog(null, "staff deleted");
        }catch(HeadlessException | SQLException sqe){
            JOptionPane.showMessageDialog(null, "Mistake!"+sqe);
        }
    }//GEN-LAST:event_add_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(my_staff_application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(my_staff_application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(my_staff_application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(my_staff_application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new my_staff_application().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JButton add_button1;
    private javax.swing.JTextField age;
    private javax.swing.JButton clear_button;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField nic;
    private javax.swing.JButton save_button;
    private javax.swing.JTextField search;
    private javax.swing.JButton search_Button;
    private javax.swing.JTable staff_table;
    // End of variables declaration//GEN-END:variables

}
